gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### MNARY ***MEAN***
MNARY_MEAN_BIAS <- subset(df_imp, DAG_type == "MNAR2" & dataset == "mean_imp") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MNARY_MEAN_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### MNARY ***MI no Y***
MNARY_MInoY_BIAS <- subset(df_imp, DAG_type == "MNAR2" & dataset == "MI_imp_data_noY") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MNARY_MInoY_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### MNARY ***MI with Y***
MNARY_MIwithY_BIAS <- subset(df_imp, DAG_type == "MNAR2" & dataset == "MI_imp_data_withY") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MNARY_MIwithY_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### COMBINE ALL MNARY BIASES INTO 1 DF
MNARY_ALL <- MNARY_ALLDATA_BIAS %>% mutate("imp_method" = "All data required") %>%
bind_rows(MNARY_MEAN_BIAS %>% mutate("imp_method" = "Imputed by mean")) %>%
bind_rows(MNARY_MInoY_BIAS %>% mutate("imp_method" = "MI without Y")) %>%
bind_rows(MNARY_MIwithY_BIAS %>% mutate("imp_method" = "MI with Y"))
rm(MNARY_ALLDATA_BIAS)
rm(MNARY_MEAN_BIAS)
rm(MNARY_MInoY_BIAS)
rm(MNARY_MIwithY_BIAS)
plot_scenario <- function(sn) {
print(sn)
MNARY_ALL = MNARY_ALL
plot <- ggplot(data = MNARY_ALL %>%
filter(scenario_combined == sn),
aes(x = bias_mean, y = dataset.y, color = factor(target_measures),
shape = factor(target_measures))) +
geom_errorbar(aes(xmin = LCI, xmax = UCI), width=.1) +
geom_point(size = 3, stroke = 0.5) +
guides(color = guide_legend(reverse = TRUE)) +
scale_shape_manual(values = c(8, 17, 16, 15)) +
scale_color_brewer(palette = "Set1") +
geom_vline(xintercept = 0, linetype="dotted") +
xlab("Bias Mean") +
ylab("Validation Data Imputation Methods") +
theme_minimal() +
theme(legend.position = "none",
axis.text = element_text(size=14),
axis.title = element_text(size=16, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 16),
panel.background = element_rect(fill = "gray90"),  # add background color to panels
panel.spacing.x = unit(0.5, "lines")) +  # increase space between panels
ggh4x::facet_grid2(target_measures ~ imp_method, scales = "free_x", independent = "x") +
scale_x_continuous(limits = function(x) c(-max(abs(x)), max(abs(x)))) +  # set limits to center zero
theme(panel.border = element_rect(color = "black", fill = NA, size = 1.5),  # add border around panels
#
strip.text = element_text(size = 14, hjust = 0.5),  # modify panel label text
strip.placement = "outside")  +  # move panel labels outside of plot area
ggtitle("Implementation Data Imputation Methods") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5))
plot <- plot + theme(panel.grid.major = element_line(size = 1.5))
# Return the plot
return(plot)
}
#MNARY_ALL: Y = 0.1, R1 = 0.5
plot_scenario("1580+1580") #MNARY + MNARY
plot_scenario("1580+1472") #MNARY + MCAR
plot_scenario("1580+1553") #MNARY + MAR
plot_scenario("1580+1796") #MNARY + MNARX
plot_scenario("1580+1823") #MNARY + MNARXY
############################################################################################################################################
# M   C   A   R
############################################################################################################################################
### MCAR ***ALL DATA REQUIRED***
MCAR_ALLDATA_BIAS <- subset(df_imp, DAG_type == "MCAR" & dataset == "all_data_imp") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MCAR_ALLDATA_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### MCAR ***MEAN***
MCAR_MEAN_BIAS <- subset(df_imp, DAG_type == "MCAR" & dataset == "mean_imp") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MCAR_MEAN_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### MCAR ***MI no Y***
MCAR_MInoY_BIAS <- subset(df_imp, DAG_type == "MCAR" & dataset == "MI_imp_data_noY") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MCAR_MInoY_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### MCAR ***MI with Y***
MCAR_MIwithY_BIAS <- subset(df_imp, DAG_type == "MCAR" & dataset == "MI_imp_data_withY") %>%
rename_at(vars("estimates"), function(x) paste0("true_", x)) %>%
left_join(df_val, MCAR_MIwithY_BIAS,
multiple = "all",
by = c("Iteration",
"mod",
"target_measures",
"n_iter",
"N",
"N_dev",
"N_imp",
"N_val",
"Y_prev",
"X_categorical",
"R_prev",
"gamma_x1",
"gamma_x2",
"gamma_U")) %>%
mutate(bias = estimates - true_estimates,
DAG_combined = paste(DAG_type.x, DAG_type.y, sep = "+")) %>%
group_by(dataset.x,
dataset.y,
target_measures,
scenario_number.x,
scenario_number.y,
N,
N_dev,
N_val,
N_imp,
Y_prev,
R_prev,
X_categorical,
beta_x1.x,
beta_x2.x,
beta_U.x,
beta_x1.y,
beta_x2.y,
beta_U.y,
gamma_x1,
gamma_x2,
gamma_U,
DAG_combined) %>%
summarise(bias_mean = mean(bias), LCI = quantile(bias, 0.025), UCI = quantile(bias, 0.975)) %>%
mutate(scenario_combined = paste(scenario_number.x, scenario_number.y, sep = "+"))
### COMBINE ALL MCAR BIASES INTO 1 DF
MCAR_ALL <- MCAR_ALLDATA_BIAS %>% mutate("imp_method" = "All data required") %>%
bind_rows(MCAR_MEAN_BIAS %>% mutate("imp_method" = "Imputed by mean")) %>%
bind_rows(MCAR_MInoY_BIAS %>% mutate("imp_method" = "MI without Y")) %>%
bind_rows(MCAR_MIwithY_BIAS %>% mutate("imp_method" = "MI with Y"))
rm(MCAR_ALLDATA_BIAS)
rm(MCAR_MEAN_BIAS)
rm(MCAR_MInoY_BIAS)
rm(MCAR_MIwithY_BIAS)
plot_scenario <- function(sn, dataset) {
print(sn)
plot <- ggplot(dataset %>%
filter(scenario_combined == sn),
aes(x = bias_mean, y = dataset.y, color = factor(target_measures),
shape = factor(target_measures))) +
geom_errorbar(aes(xmin = LCI, xmax = UCI), width=.1) +
geom_point(size = 3, stroke = 0.5) +
guides(color = guide_legend(reverse = TRUE)) +
scale_shape_manual(values = c(8, 17, 16, 15)) +
scale_color_brewer(palette = "Set1") +
geom_vline(xintercept = 0, linetype="dotted") +
xlab("Bias Mean") +
ylab("Validation Data Imputation Methods") +
theme_minimal() +
theme(legend.position = "none",
axis.text = element_text(size=14),
axis.title = element_text(size=16, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 16),
panel.background = element_rect(fill = "gray90"),  # add background color to panels
panel.spacing.x = unit(0.5, "lines")) +  # increase space between panels
ggh4x::facet_grid2(target_measures ~ imp_method, scales = "free_x", independent = "x") +
scale_x_continuous(limits = function(x) c(-max(abs(x)), max(abs(x)))) +  # set limits to center zero
theme(panel.border = element_rect(color = "black", fill = NA, size = 1.5),  # add border around panels
#
strip.text = element_text(size = 14, hjust = 0.5),  # modify panel label text
strip.placement = "outside")  +  # move panel labels outside of plot area
ggtitle("Implementation Data Imputation Methods") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5))
plot <- plot + theme(panel.grid.major = element_line(size = 1.5))
# Return the plot
return(plot)
}
plot("1472+1472", MCAR_ALL)
plot("1472+1472", dataset = MCAR_ALL)
plot_scenario <- function(sn) {
print(sn)
MNARY_ALL = MNARY_ALL
plot <- ggplot(data = MNARY_ALL %>%
filter(scenario_combined == sn),
aes(x = bias_mean, y = dataset.y, color = factor(target_measures),
shape = factor(target_measures))) +
geom_errorbar(aes(xmin = LCI, xmax = UCI), width=.1) +
geom_point(size = 3, stroke = 0.5) +
guides(color = guide_legend(reverse = TRUE)) +
scale_shape_manual(values = c(8, 17, 16, 15)) +
scale_color_brewer(palette = "Set1") +
geom_vline(xintercept = 0, linetype="dotted") +
xlab("Bias Mean") +
ylab("Validation Data Imputation Methods") +
theme_minimal() +
theme(legend.position = "none",
axis.text = element_text(size=14),
axis.title = element_text(size=16, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 16),
panel.background = element_rect(fill = "gray90"),  # add background color to panels
panel.spacing.x = unit(0.5, "lines")) +  # increase space between panels
ggh4x::facet_grid2(target_measures ~ imp_method, scales = "free_x", independent = "x") +
scale_x_continuous(limits = function(x) c(-max(abs(x)), max(abs(x)))) +  # set limits to center zero
theme(panel.border = element_rect(color = "black", fill = NA, size = 1.5),  # add border around panels
#
strip.text = element_text(size = 14, hjust = 0.5),  # modify panel label text
strip.placement = "outside")  +  # move panel labels outside of plot area
ggtitle("Implementation Data Imputation Methods") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5))
plot <- plot + theme(panel.grid.major = element_line(size = 1.5))
# Return the plot
return(plot)
}
setwd("~/AntoniaPhD/2. RSim/RESULTScontinuous/plots_new")
#MCAR_ALL: Y = R1 = 0.5
plot_scenario("5846+5846") #MCAR + MCAR
plot_scenario <- function(sn) {
print(sn)
MCAR_ALL = MCAR_ALL
plot <- ggplot(data = MCAR_ALL %>%
filter(scenario_combined == sn),
aes(x = bias_mean, y = dataset.y, color = factor(target_measures),
shape = factor(target_measures))) +
geom_errorbar(aes(xmin = LCI, xmax = UCI), width=.1) +
geom_point(size = 3, stroke = 0.5) +
guides(color = guide_legend(reverse = TRUE)) +
scale_shape_manual(values = c(8, 17, 16, 15)) +
scale_color_brewer(palette = "Set1") +
geom_vline(xintercept = 0, linetype="dotted") +
xlab("Bias Mean") +
ylab("Validation Data Imputation Methods") +
theme_minimal() +
theme(legend.position = "none",
axis.text = element_text(size=14),
axis.title = element_text(size=16, face="bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
strip.text = element_text(size = 16),
panel.background = element_rect(fill = "gray90"),  # add background color to panels
panel.spacing.x = unit(0.5, "lines")) +  # increase space between panels
ggh4x::facet_grid2(target_measures ~ imp_method, scales = "free_x", independent = "x") +
scale_x_continuous(limits = function(x) c(-max(abs(x)), max(abs(x)))) +  # set limits to center zero
theme(panel.border = element_rect(color = "black", fill = NA, size = 1.5),  # add border around panels
#
strip.text = element_text(size = 14, hjust = 0.5),  # modify panel label text
strip.placement = "outside")  +  # move panel labels outside of plot area
ggtitle("Implementation Data Imputation Methods") +
theme(plot.title = element_text(face = "bold", size = 16, hjust = 0.5))
plot <- plot + theme(panel.grid.major = element_line(size = 1.5))
# Return the plot
return(plot)
}
#MCAR_ALL: Y = R1 = 0.5
plot_scenario("5846+5846") #MCAR + MCAR
#MCAR_ALL: Y = 0.1, R1 = 0.5
plot_scenario("1472+1472") #MCAR + MCAR
library(tidyverse)
library(magrittr)
library(dplyr)
library(ggplot2)
library(data.table)
library(RColorBrewer)
library(ggh4x)
# Iterations 1-25
##############################################################################################################
setwd("/Users/user/AntoniaPhD/2. RSim/RESULTScontinuous/25x1")
##############################################################################################################
source("~/AntoniaPhD/2. RSim/2-RSim/Bias calculations/MissingnessMechanismsCombos15thJun.R", echo=TRUE)
